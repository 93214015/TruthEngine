#pragma once




enum TE_RESOURCE_USAGE : int32_t {
	TE_RESOURCE_USAGE_UNKNOWN = 0,
	TE_RESOURCE_USAGE_RENDERTARGET = (1 << 0),
	TE_RESOURCE_USAGE_DEPTHSTENCIL = (1 << 1),
	TE_RESOURCE_USAGE_SHADERRESOURCE = (1 << 2),
	TE_RESOURCE_USAGE_CONSTANTBUFFER = (1 << 3) | TE_RESOURCE_USAGE_SHADERRESOURCE,
	TE_RESOURCE_USAGE_UAV = (1 << 4),
	TE_RESOURCE_USAGE_VERTEXBUFFER = (1 << 5) | TE_RESOURCE_USAGE_SHADERRESOURCE,
	TE_RESOURCE_USAGE_INDEXBUFFER = (1 << 6) | TE_RESOURCE_USAGE_SHADERRESOURCE,
	TE_RESOURCE_USAGE_INTERMEDIATEUPLOADBBUFFER = (1 << 7)
};

inline TE_RESOURCE_USAGE operator|(TE_RESOURCE_USAGE u1, TE_RESOURCE_USAGE u2)
{
	return static_cast<TE_RESOURCE_USAGE>(static_cast<int32_t>(u1) | static_cast<int32_t>(u2));
}

enum class TE_RESOURCE_TYPE
{
	UNKNOWN,
	BUFFER,
	TEXTURE1D, TEXTURE2D, TEXTURE3D, TEXTURECUBE
};

enum class TE_RESOURCE_STATES
{
	COMMON = 0,
	VERTEX_AND_CONSTANT_BUFFER = 0x1,
	INDEX_BUFFER = 0x2,
	RENDER_TARGET = 0x4,
	UNORDERED_ACCESS = 0x8,
	DEPTH_WRITE = 0x10,
	DEPTH_READ = 0x20,
	NON_PIXEL_SHADER_RESOURCE = 0x40,
	PIXEL_SHADER_RESOURCE = 0x80,
	STREAM_OUT = 0x100,
	INDIRECT_ARGUMENT = 0x200,
	COPY_DEST = 0x400,
	COPY_SOURCE = 0x800,
	RESOLVE_DEST = 0x1000,
	RESOLVE_SOURCE = 0x2000,
	RAYTRACING_ACCELERATION_STRUCTURE = 0x400000,
	SHADING_RATE_SOURCE = 0x1000000,
	GENERIC_READ0 = (((((0x1 | 0x2) | 0x40) | 0x80) | 0x200) | 0x800),
	PRESENT = 0,
	PREDICATION = 0x200,
	VIDEO_DECODE_READ = 0x10000,
	VIDEO_DECODE_WRITE = 0x20000,
	VIDEO_PROCESS_READ = 0x40000,
	VIDEO_PROCESS_WRITE = 0x80000,
	VIDEO_ENCODE_READ = 0x200000,
	VIDEO_ENCODE_WRITE = 0x800000
};

enum class TE_RESOURCE_FORMAT
{
	UNKNOWN,
	R32G32B32A32_TYPELESS,
	R32G32B32A32_FLOAT,
	R32G32B32A32_UINT,
	R32G32B32A32_SINT,
	R32G32B32_TYPELESS,
	R32G32B32_FLOAT,
	R32G32B32_UINT,
	R32G32B32_SINT,
	R16G16B16A16_TYPELESS,
	R16G16B16A16_FLOAT,
	R16G16B16A16_UNORM,
	R16G16B16A16_UINT,
	R16G16B16A16_SNORM,
	R16G16B16A16_SINT,
	R32G32_TYPELESS,
	R32G32_FLOAT,
	R32G32_UINT,
	R32G32_SINT,
	R32G8X24_TYPELESS,
	D32_FLOAT_S8X24_UINT,
	R32_FLOAT_X8X24_TYPELESS,
	X32_TYPELESS_G8X24_UINT,
	R10G10B10A2_TYPELESS,
	R10G10B10A2_UNORM,
	R10G10B10A2_UINT,
	R11G11B10_FLOAT,
	R8G8B8A8_TYPELESS,
	R8G8B8A8_UNORM,
	R8G8B8A8_UNORM_SRGB,
	R8G8B8A8_UINT,
	R8G8B8A8_SNORM,
	R8G8B8A8_SINT,
	R16G16_TYPELESS,
	R16G16_FLOAT,
	R16G16_UNORM,
	R16G16_UINT,
	R16G16_SNORM,
	R16G16_SINT,
	R32_TYPELESS,
	D32_FLOAT,
	R32_FLOAT,
	R32_UINT,
	R32_SINT,
	R24G8_TYPELESS,
	D24_UNORM_S8_UINT,
	R24_UNORM_X8_TYPELESS,
	X24_TYPELESS_G8_UINT,
	R8G8_TYPELESS,
	R8G8_UNORM,
	R8G8_UINT,
	R8G8_SNORM,
	R8G8_SINT,
	R16_TYPELESS,
	R16_FLOAT,
	D16_UNORM,
	R16_UNORM,
	R16_UINT,
	R16_SNORM,
	R16_SINT,
	R8_TYPELESS,
	R8_UNORM,
	R8_UINT,
	R8_SNORM,
	R8_SINT,
	A8_UNORM,
	R1_UNORM,
	R9G9B9E5_SHAREDEXP,
	R8G8_B8G8_UNORM,
	G8R8_G8B8_UNORM,
	BC1_TYPELESS,
	BC1_UNORM,
	BC1_UNORM_SRGB,
	BC2_TYPELESS,
	BC2_UNORM,
	BC2_UNORM_SRGB,
	BC3_TYPELESS,
	BC3_UNORM,
	BC3_UNORM_SRGB,
	BC4_TYPELESS,
	BC4_UNORM,
	BC4_SNORM,
	BC5_TYPELESS,
	BC5_UNORM,
	BC5_SNORM,
	B5G6R5_UNORM,
	B5G5R5A1_UNORM,
	B8G8R8A8_UNORM,
	B8G8R8X8_UNORM,
	R10G10B10_XR_BIAS_A2_UNORM,
	B8G8R8A8_TYPELESS,
	B8G8R8A8_UNORM_SRGB,
	B8G8R8X8_TYPELESS,
	B8G8R8X8_UNORM_SRGB,
	BC6H_TYPELESS,
	BC6H_UF16,
	BC6H_SF16,
	BC7_TYPELESS,
	BC7_UNORM,
	BC7_UNORM_SRGB,
	AYUV,
	Y410,
	Y416,
	NV12,
	P010,
	P016,
	F420_OPAQUE,
	YUY2,
	Y210,
	Y216,
	NV11,
	AI44,
	IA44,
	P8,
	A8P8,
	B4G4R4A4_UNORM,
	P208,
	V208,
	V408,
	SAMPLER_FEEDBACK_MIN_MIP_OPAQUE,
	SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE,
	FORCE_UINT
};

enum class TE_RENDERER_COMMANDLIST_TYPE
{
	DIRECT = 0,
	BUNDLE = 1,
	COMPUTE = 2,
	COPY = 3,
	VIDEO_DECODE = 4,
	VIDEO_PROCESS = 5,
	VIDEO_ENCODE = 6
};

#define DX12_GET_STATE(x) static_cast<D3D12_RESOURCE_STATES>(x)
#define DXGIFORMAT(x) static_cast<DXGI_FORMAT>(x)